USE library;

-- 1.	Show the members under the name "Jens S." who were born before 1970 that became members of the library in 2013.
SELECT * FROM tmember
WHERE cName = 'Jens S.'
  AND dBirth < '1970-01-01'
  AND YEAR(dNewMember) = '2013';

-- 2.	Show those books that have not been published by the publishing companies with ID 15 and 32, except if they were published before 2000.
SELECT  * FROM tbook
WHERE nPublishingCompanyID NOT IN (15, 32);


-- 3.	Show the name and surname of the members who have a phone number, but no address.
SELECT cName, cSurname FROM tmember
WHERE cPhoneNo IS NOT NULL
  AND cAddress IS NULL;

-- 4.	Show the authors with surname "Byatt" whose name starts by an "A" (uppercase) and contains an "S" (uppercase).
SELECT * FROM tauthor
WHERE cSurname = 'Byatt'
  AND cName LIKE 'A%S%';

-- 5.	Show the number of books published in 2007 by the publishing company with ID 32.
SELECT COUNT(*) FROM tbook
WHERE nPublishingYear = '2007'
  AND nPublishingCompanyID = 32;

-- 6.	For each day of the year 2014, show the number of books loaned by the member with CPR "0305393207";
SELECT COUNT(*), dLoan FROM tloan
WHERE cCPR = '0305393207'
  AND YEAR(dLoan) = '2014'
GROUP BY dloan;

-- 7.	Modify the previous clause so that only those days where the member was loaned more than one book appear.
SELECT COUNT(*), dLoan FROM tloan
WHERE cCPR = '0305393207'
  AND YEAR(dLoan) = '2014'
GROUP BY dloan
HAVING COUNT(*) > 1;

-- 8.	Show all library members from the newest to the oldest. Those who became members on the same day will be sorted alphabetically (by surname and name) within that day.
SELECT * FROM tmember
ORDER BY dNewMember, cSurname, cName ASC;

-- 9.	Show the title of all books published by the publishing company with ID 32 along with their theme or themes.
SELECT tbook.cTitle, ttheme.cName FROM tbook
                                           JOIN tbooktheme ON tbook.nBookID = tbook.nBookID
                                           JOIN ttheme ON tbooktheme.nThemeID = ttheme.nThemeID
WHERE tbook.nPublishingCompanyID = 32;


-- 10.	Show the name and surname of every author along with the number of books authored by them, but only for authors who have registered books on the database.
SELECT tauthor.cName, tauthor.cSurname, COUNT(tauthorship.nBookID) AS numberOfBooks FROM tauthor
                                                                                             JOIN tauthorship ON tauthor.nAuthorID = tauthorship.nAuthorID
                                                                                             JOIN tbook ON tauthorship.nBookID = tbook.nBookID
GROUP BY tauthor.nAuthorID;

-- 11.	Show the name and surname of all the authors with published books along with the lowest publishing year for their books.
SELECT tauthor.cName, tauthor.cSurname, MIN(tbook.nPublishingYear) FROM tauthor
                                                                            JOIN tauthorship ON tauthor.nAuthorID = tauthorship.nAuthorID
                                                                            JOIN tbook ON tauthorship.nBookID = tbook.nBookID
GROUP BY tauthor.cName, tauthor.cSurname;

-- SELECT * FROM tauthorship GROUP BY nAuthorID ORDER BY nAuthorID;


-- 12.	For each signature and loan date, show the title of the corresponding books and the name and surname of the member who had them loaned.
SELECT tloan.cSignature, tloan.dLoan, tbook.cTitle, tmember.cName, tmember.cSurname FROM tloan
                                                                                             JOIN tbookcopy ON tloan.cSignature = tbookcopy.cSignature
                                                                                             JOIN tbook ON tbookcopy.nBookID = tbook.nBookID
                                                                                             JOIN tmember ON tloan.cCPR = tmember.cCPR;

-- 13.	Repeat exercises 9 to 12 using the modern JOIN notation.


-- 14.	Show all theme names along with the titles of their associated books. All themes must appear (even if there are no books for some particular themes). Sort by theme name.
SELECT ttheme.cName, tbook.cTitle FROM ttheme
LEFT JOIN tbooktheme ON ttheme.nThemeID = tbooktheme.nThemeID
LEFT JOIN tbook ON tbooktheme.nBookID = tbook.nBookID
ORDER BY ttheme.cName ASC;

-- 15.	Show the name and surname of all members who joined the library in 2013 along with the title of the books they took on loan during that same year. All members must be shown, even if they did not take any book on loan during 2013. Sort by member surname and name.
SELECT tmember.cName, tmember.cSurname, tbook.cTitle, YEAR(tmember.dNewMember)
FROM tmember
         JOIN tloan ON tmember.cCPR = tloan.cCPR
         JOIN tbookcopy ON tbookcopy.cSignature = tloan.cSignature
         JOIN tbook ON tbook.nBookID = tbookcopy.nBookID
WHERE YEAR(tmember.dNewMember) = '2013';

-- 16.	Show the name and surname of all authors along with their nationality or nationalities and the titles of their books. Every author must be shown, even though s/he has no registered books. Sort by author name and surname.
SELECT tauthor.cName, tauthor.cSurname, tcountry.cName, tbook.cTitle FROM tauthor
JOIN tnationality ON tnationality.nAuthorID = tauthor.nAuthorID
JOIN tcountry ON tcountry.nCountryID = tnationality.nCountryID
LEFT JOIN tauthorship ON tauthorship.nAuthorID = tauthor.nAuthorID
JOIN tbook ON tbook.nBookID = tauthorship.nBookID;


-- 17.	Show the title of those books which have had different editions published in both 1970 and 1989.
SELECT COUNT(tbook.cTitle), tbook.cTitle FROM tbook
WHERE nPublishingYear = '1970' OR
        nPublishingYear = '1989'
GROUP BY tbook.cTitle
HAVING COUNT(tbook.cTitle) > 1;



-- 18.	Show the surname and name of all members who joined the library in December 2013 followed by the surname and name of those authors whose name is “William”.
SELECT tmember.cSurname, tmember.cName FROM tmember
WHERE YEAR(tmember.dNewMember) = '2013' AND MONTH(tmember.dNewMember) = '10'
UNION
SELECT tauthor.cSurname, tauthor.cName FROM tauthor
WHERE tauthor.cName = 'William';

-- 19.	Show the name and surname of the first chronological member of the library using subqueries.
SELECT tmember.cName, tmember.cSurname, tmember.dNewMember FROM tmember
WHERE dNewMember IN(
    SELECT MIN(dNewMember) FROM tmember
);

-- 20.	For each publishing year, show the number of book titles published by publishing companies from countries that constitute the nationality for at least three authors. Use subqueries.

-- -----------------------------------------------
-- Don't know... yet
SELECT COUNT(tbook.cTitle), tbook.nPublishingYear FROM tbook
WHERE tbook.nPublishingCompanyID IN (
    SELECT pComp.nPublishingCompanyID FROM tpublishingcompany pComp
JOIN tnationality nat ON pComp.nCountryID = nat.nCountryID
                                               JOIN tauthor auth on nat.nAuthorID = auth.nAuthorID
);
GROUP BY tbook.nPublishingYear
ORDER BY tbook.nPublishingYear;

-- Don't know...yet
-- -----------------------------------------------

-- 21.	Show the name and country of all publishing companies with the headings "Name" and "Country".
SELECT pComp.cName AS Name, country.cName AS Country FROM tpublishingcompany pComp
                                                              JOIN tcountry country ON pComp.nCountryID = country.nCountryID;

-- 22.	Show the titles of the books published between 1926 and 1978 that were not published by the publishing company with ID 32.
SELECT cTitle FROM tbook
WHERE nPublishingYear < '1978'
  AND nPublishingYear > '1926'
  AND nPublishingCompanyID <> 32;

-- 23.	Show the name and surname of the members who joined the library after 2016 and have no address.
SELECT mem.cName, mem.cSurname FROM tmember mem
WHERE YEAR(mem.dNewMember) > '2016'
  AND mem.cAddress IS NULL;

-- 24.	Show the country codes for countries with publishing companies. Exclude repeated values.
SELECT DISTINCT c.nCountryID FROM tcountry c
JOIN tpublishingcompany pCom ON pCom.nCountryID = c.nCountryID;

-- 25.	Show the titles of books whose title starts by "The Tale" and that are not published by "Lynch Inc".
SELECT tbook.cTitle FROM tbook
JOIN tpublishingcompany t on tbook.nPublishingCompanyID = t.nPublishingCompanyID
WHERE tbook.cTitle LIKE '%The Tale%'
    AND t.cName <> 'Lynch Inc';


-- 26.	Show the list of themes for which the publishing company "Lynch Inc" has published books, excluding repeated values.
SELECT ttheme.cName, t3.cName FROM ttheme
JOIN tbooktheme t on ttheme.nThemeID = t.nThemeID
JOIN tbook t2 on t.nBookID = t2.nBookID
JOIN tpublishingcompany t3 on t2.nPublishingCompanyID = t3.nPublishingCompanyID
WHERE t3.cName = 'Lynch Inc'
;

-- 27.	Show the titles of those books which have never been loaned.
SELECT * FROM tbook
LEFT JOIN tbookcopy t ON tbook.nBookID = t.nBookID
LEFT JOIN tloan lo ON lo.cSignature = t.cSignature
WHERE lo.dLoan IS NULL;

-- 28.	For each publishing company, show its number of existing books under the heading "No. of Books".
SELECT COUNT(pc.cName) AS 'No. of Books', pc.cName FROM tpublishingcompany pc
LEFT JOIN tbook b ON b.nPublishingCompanyID = pc.nPublishingCompanyID
GROUP BY pc.cName;

-- 29.	Show the number of members who took some book on a loan during 2013.
SELECT COUNT(mem.cCPR) FROM tloan lo
JOIN tmember mem ON mem.cCPR = lo.cCPR
WHERE YEAR(lo.dLoan) = '2013';

-- 30.	For each book that has at least two authors, show its title and number of authors under the heading "No. of Authors".

SELECT COUNT(t.nAuthorID) AS 'No. of Authors' , cTitle FROM tauthor
JOIN tauthorship t on tauthor.nAuthorID = t.nAuthorID
JOIN tbook t2 on t.nBookID = t2.nBookID
GROUP BY cTitle
HAVING COUNT(t.nAuthorID) > 1;

